<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.integration">Integration</Crumb::Item>
	<Crumb::Item @link="docs.integration.websocket.text">WebSocket (text protocol)</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2>WebSocket (text protocol)</h2>
	<p>The WebSocket protocol allows for easy bi-directional communication with SurrealDB. This allows you to maintain a single connection to run all your queries, but also opens up the possibility of Live Queries!</p>
	<blockquote yellow text="Note">Live queries are still under development, though available soon. Checkout <Link @link="https://www.youtube.com/watch?v=zEaQBiNbkoU">this livestream</Link> to learn more about Live Queries.</blockquote>
</Layout::Text>

<Layout::Gap mini />

<Layout::Table filled>
	<table>
		<thead>
			<tr>
				<th w-40>Method</th>
				<th w-60>Description</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
					<a href="#use">
						<code>use</code> <code>[ ns, db ]</code>
					</a>
				</td>
				<td>Specifies the namespace and database for the current connection</td>
			</tr>
			{{!-- Not sure what the info method does, it exists however so I'll leave it commented here --}}
			{{!-- <tr> --}}
				{{!-- <td> --}}
					{{!-- <a href="#info"> --}}
						{{!-- <code>info</code> --}}
					{{!-- </a> --}}
				{{!-- </td> --}}
				{{!-- <td>...</td> --}}
			{{!-- </tr>  --}}
			<tr>
				<td>
					<a href="#signup">
						<code>signup</code> <code>[ NS, DB, SC, ... ]</code>
					</a>
				</td>
				<td>Signup a user against a scope&apos;s <code>SIGNUP</code> method</td>
			</tr>
			<tr>
				<td>
					<a href="#signin">
						<code>signin</code> <code>[ ... ]</code>
					</a>
				</td>
				<td>Signin a root, NS, DB or SC user against SurrealDB</td>
			</tr>
			<tr>
				<td>
					<a href="#authenticate">
						<code>authenticate</code> <code>[ token ]</code>
					</a>
				</td>
				<td>Authenticate a user against SurrealDB with a token</td>
			</tr>
			<tr>
				<td>
					<a href="#invalidate">
						<code>invalidate</code>
					</a>
				</td>
				<td>Invalidate a user&apos;s session for the current connection</td>
			</tr>
			<tr>
				<td>
					<a href="#let">
						<code>let</code> <code>[ name, value ]</code>
					</a>
				</td>
				<td>Define a variable on the current connection</td>
			</tr>
			<tr>
				<td>
					<a href="#unset">
						<code>unset</code> <code>[ name ]</code>
					</a>
				</td>
				<td>Remove a variable from the currect connection</td>
			</tr>
			{{!-- Leaving commented out for now as it's not yet implemented --}}
			{{!-- <tr> --}}
				{{!-- <td> --}}
					{{!-- <a href="#live"> --}}
						{{!-- <code>live</code> <code>[ sql ]</code> --}}
					{{!-- </a> --}}
				{{!-- </td> --}}
				{{!-- <td>Initiate a live query</td> --}}
			{{!-- </tr> --}}
			{{!-- <tr> --}}
				{{!-- <td> --}}
					{{!-- <a href="#kill"> --}}
						{{!-- <code>kill</code> <code>[ queryUuid ]</code> --}}
					{{!-- </a> --}}
				{{!-- </td> --}}
				{{!-- <td>Kill an active live query</td> --}}
			{{!-- </tr> --}}
			<tr>
				<td>
					<a href="#query">
						<code>query</code> <code>[ sql, vars ]</code>
					</a>
				</td>
				<td>Execute a custom query with optional variables</td>
			</tr>
			<tr>
				<td>
					<a href="#select">
						<code>select</code> <code>[ thing ]</code>
					</a>
				</td>
				<td>Select either all records in a table or a single record</td>
			</tr>
			<tr>
				<td>
					<a href="#create">
						<code>create</code> <code>[ thing, data ]</code>
					</a>
				</td>
				<td>Create a record with a random or specified ID</td>
			</tr>
			<tr>
				<td>
					<a href="#update">
						<code>update</code> <code>[ thing, data ]</code>
					</a>
				</td>
				<td>Replace either all records in a table or a single record with specified data</td>
			</tr>
			<tr>
				<td>
					<a href="#merge">
						<code>merge</code> <code>[ thing, data ]</code>
					</a>
				</td>
				<td>Merge specified data into either all records in a table or a single record</td>
			</tr>
			<tr>
				<td>
					<a href="#patch">
						<code>patch</code> <code>[ thing, patches ]</code>
					</a>
				</td>
				<td>Patch either all records in a table or a single record with specified patches</td>
			</tr>
			<tr>
				<td>
					<a href="#delete">
						<code>delete</code> <code>[ thing ]</code>
					</a>
				</td>
				<td>Delete either all records in a table or a single record</td>
			</tr>
		</tbody>
	</table>
</Layout::Table>

<Layout::Gap small />

<Layout::Group {{waypoint "use"}}>

	<Layout::Text text-l text-f>
		<h3><code>use</code> <code>[ ns, db ]</code> method</h3>
		<p>This method specifies the namespace and database for the current connection</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>ns</code>
							<l yellow r>Required</l>
						</td>
						<td>Specifies the namespace to use</td>
					</tr>
					<tr>
						<td>
							<code>db</code>
							<l yellow r>Required</l>
						</td>
						<td>Specifies the namespace to use</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-use.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-use.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "signup"}}>

	<Layout::Text text-l text-f>
		<h3><code>signup</code> <code>[ NS, DB, SC, ... ]</code> method</h3>
		<p>This method allows you to signup a user against a scope&apos;s <code>SIGNUP</code> method</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>NS</code>
							<l yellow r>Required</l>
						</td>
						<td>Specifies the namespace of the scope</td>
					</tr>
					<tr>
						<td>
							<code>DB</code>
							<l yellow r>Required</l>
						</td>
						<td>Specifies the database of the scope</td>
					</tr>
					<tr>
						<td>
							<code>SC</code>
							<l yellow r>Required</l>
						</td>
						<td>Specifies the scope</td>
					</tr>
					<tr>
						<td>
							<code>...</code>
						</td>
						<td>Specifies any variables used by the scope&apos;s <code>SIGNUP</code> method</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-signup.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-signup.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "signin"}}>

	<Layout::Text text-l text-f>
		<h3><code>signin</code> <code>[ NS, DB, SC, ... ]</code> method</h3>
		<p>This method allows you to signin a root, NS, DB or SC user against SurrealDB</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>NS</code>
							<l yellow r>Required for DB & SC</l>
						</td>
						<td>
							The namespace to sign in to
						</td>
					</tr>
					<tr>
						<td>
							<code>DB</code>
							<l yellow r>Required for SC</l>
						</td>
						<td>
							The database to sign in to
						</td>
					</tr>
					<tr>
						<td>
							<code>SC</code>
						</td>
						<td>
							The scope to sign in to.
						</td>
					</tr>
					<tr>
						<td>
							<code>user</code>
							<l yellow r>Required for root, NS & DB</l>
						</td>
						<td>
							The username of the database user
						</td>
					</tr>
					<tr>
						<td>
							<code>pass</code>
							<l yellow r>Required for root, NS & DB</l>
						</td>
						<td>
							The password of the database user
						</td>
					</tr>
					<tr>
						<td>
							<code>...</code>
						</td>
						<td>Specifies any variables used by the scope&apos;s <code>SIGNIN</code> method</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<p>Down below follow two example messages</p>
		<h5>Signin as root</h5>
		<Code @name="docs/integration/websocket/text/req-signin-root.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-signin-root.json" @language="json" />
		<h5>Signin as scope</h5>
		<Code @name="docs/integration/websocket/text/req-signin-scope.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-signin-scope.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "authenticate"}}>

	<Layout::Text text-l text-f>
		<h3><code>authenticate</code> <code>[ token ]</code> method</h3>
		<p>This method allows you to authenticate a user against SurrealDB with a token</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>token</code>
							<l yellow r>Required</l>
						</td>
						<td>The token that authenticates the user</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-authenticate.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-authenticate.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "invalidate"}}>

	<Layout::Text text-l text-f>
		<h3><code>invalidate</code> method</h3>
		<p>This method will invalidate the user&apos;s session for the current connection</p>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-invalidate.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-invalidate.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "let"}}>

	<Layout::Text text-l text-f>
		<h3><code>let</code> <code>[ name, value ]</code> method</h3>
		<p>This method stores a variable on the current connection</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>name</code>
							<l yellow r>Required</l>
						</td>
						<td>The name for the variable without a prefixed <code>$</code> character</td>
					</tr>
					<tr>
						<td>
							<code>value</code>
							<l yellow r>Required</l>
						</td>
						<td>The value for the variable</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-let.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-let.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "unset"}}>

	<Layout::Text text-l text-f>
		<h3><code>unset</code> <code>[ name ]</code> method</h3>
		<p>This method removes a variable from the current connection</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>name</code>
							<l yellow r>Required</l>
						</td>
						<td>The name of the variable without a prefixed <code>$</code> character</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-unset.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-unset.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "query"}}>

	<Layout::Text text-l text-f>
		<h3><code>query</code> <code>[ sql, vars ]</code> method</h3>
		<p>This method executes a custom query against SurrealDB</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>sql</code>
							<l yellow r>Required</l>
						</td>
						<td>The query to execute against SurrealDB</td>
					</tr>
					<tr>
						<td>
							<code>vars</code>
							<l faint r>Optional</l>
						</td>
						<td>A set of variables used by the query</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-query.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-query.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "select"}}>

	<Layout::Text text-l text-f>
		<h3><code>select</code> <code>[ thing ]</code> method</h3>
		<p>This method selects either all records in a table or a single record</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>thing</code>
							<l yellow r>Required</l>
						</td>
						<td>The thing (Table or Record ID) to select</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-select.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-select.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "create"}}>

	<Layout::Text text-l text-f>
		<h3><code>create</code> <code>[ thing, data ]</code> method</h3>
		<p>This method creates a record either with a random or specified ID</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>thing</code>
							<l yellow r>Required</l>
						</td>
						<td>The thing (Table or Record ID) to create. Passing just a table will result in a randomly generated ID</td>
					</tr>
					<tr>
						<td>
							<code>data</code>
							<l faint r>Optional</l>
						</td>
						<td>The content of the record</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-create.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-create.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "update"}}>

	<Layout::Text text-l text-f>
		<h3><code>update</code> <code>[ thing, data ]</code> method</h3>
		<p>This method replaces either all records in a table or a single record with specified data</p>
		<blockquote yellow text="Note">This function replaces the current document / record data with the specified data. If no replacement data is passed it will simply trigger an update.</blockquote>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>thing</code>
							<l yellow r>Required</l>
						</td>
						<td>The thing (Table or Record ID) to update</td>
					</tr>
					<tr>
						<td>
							<code>data</code>
							<l faint r>Optional</l>
						</td>
						<td>The new content of the record</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-update.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-update.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "merge"}}>

	<Layout::Text text-l text-f>
		<h3><code>merge</code> <code>[ thing, data ]</code> method</h3>
		<p>This method merges specified data into either all records in a table or a single record</p>
		<blockquote yellow text="Note">This function merges the current document / record data with the specified data. If no merge data is passed it will simply trigger an update.</blockquote>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>thing</code>
							<l yellow r>Required</l>
						</td>
						<td>The thing (Table or Record ID) to merge into</td>
					</tr>
					<tr>
						<td>
							<code>data</code>
							<l faint r>Optional</l>
						</td>
						<td>The content to be merged</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-merge.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-merge.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "patch"}}>

	<Layout::Text text-l text-f>
		<h3><code>patch</code> <code>[ thing, patches ]</code> method</h3>
		<p>This method patches either all records in a table or a single record with specified patches</p>
		<blockquote yellow text="Note">This function patches the current document / record data with the specified <Link @link="https://jsonpatch.com">JSON Patch</Link> data.</blockquote>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>thing</code>
							<l yellow r>Required</l>
						</td>
						<td>The thing (Table or Record ID) to patch</td>
					</tr>
					<tr>
						<td>
							<code>patches</code>
							<l yellow r>Required</l>
						</td>
						<td>An array of patches following the <Link @href="https://jsonpatch.com/">JSON Patch specification</Link></td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-patch.json" @language="json" />
		<h4>Response</h4>
		<Code @name="docs/integration/websocket/text/res-patch.json" @language="json" />
	</Layout::Text>

</Layout::Group>

<Layout::Gap small />

<Layout::Group {{waypoint "delete"}}>

	<Layout::Text text-l text-f>
		<h3><code>delete</code> <code>[ thing, patches ]</code> method</h3>
		<p>This method deletes either all records in a table or a single record</p>
		<Layout::Table>
			<table>
				<thead>
					<tr>
						<th w-40>Parameter</th>
						<th w-60>Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>
							<code>thing</code>
							<l yellow r>Required</l>
						</td>
						<td>The thing (Table or Record ID) to delete</td>
					</tr>
				</tbody>
			</table>
		</Layout::Table>
		<h4>Example message</h4>
		<Code @name="docs/integration/websocket/text/req-delete.json" @language="json" />
		<h4>Response</h4>
		<p>Notice how the deleted record is being returned here</p>
		<Code @name="docs/integration/websocket/text/res-delete.json" @language="json" />
	</Layout::Text>

</Layout::Group>